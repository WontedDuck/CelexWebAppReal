@model List<CelexWebApp.Models.AlumnoMMV.AlumnoModel>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/css/grupo_deta/buscar_alumno.css" rel="stylesheet" />
<canvas id="particleCanvas" style="position: fixed; top: 0; left: 0; z-index: -2; width: 100%; height: 100%;"></canvas>
<canvas id="geometricCanvas" style="position: fixed; top: 0; left: 0; z-index: -1; width: 100%; height: 100%;"></canvas>
@if (TempData["Mensaje"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["Mensaje"]
    </div>
}
<form method="post" asp-controller="GrupoDetalles" asp-action="AgregarAlumnos">
    <div style="margin-top: 20px; text-align: right;">
        <button type="submit" class="btn btn-success">Agregar Alumnos</button>
    </div>
    <div class="form-group" style="max-width: 350px; margin-bottom: 15px;">
        <input type="text" id="buscadorAlumnos" class="form-control" placeholder="Buscar alumno..." onkeyup="filtrarAlumnos()" />
    </div>
    <div class="table-container">
        <div class="modern-table">
            <div class="table-header">
                <span class="header-item">Seleccionar</span>
                <span class="header-item">Nombre</span>
                <span class="header-item">Apellido Paterno</span>
                <span class="header-item">Apellido Materno</span>
            </div>
            <div class="table-body">
                @foreach (var alumno in Model)
                {
                    <div class="table-row">
                        <span class="row-item" data-label="Seleccionar">
                            <input type="checkbox" name="alumnosSeleccionados" value="@alumno.Id" style="width: 24px; height: 24px;" />
                        </span>
                        <span class="row-item" data-label="Nombre">@alumno.Nombre</span>
                        <span class="row-item" data-label="Apellido Paterno">@alumno.ApellidoPa</span>
                        <span class="row-item" data-label="Apellido Materno">@alumno.ApellidoMa</span>
                    </div>
                }
            </div>
        </div>
    </div>
</form>


<footer class="footer">
    <p>© @DateTime.Now.Year - CelexWebApp</p>
</footer>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // Efecto de partículas flotantes
    const particleCanvas = document.getElementById("particleCanvas");
    const particleCtx = particleCanvas.getContext("2d");

    particleCanvas.width = window.innerWidth;
    particleCanvas.height = window.innerHeight;

    window.addEventListener("resize", () => {
        particleCanvas.width = window.innerWidth;
        particleCanvas.height = window.innerHeight;
    });

    const particlesArray = [];
    const numberOfParticles = 150;

    class Particle {
        constructor() {
            this.x = Math.random() * particleCanvas.width;
            this.y = Math.random() * particleCanvas.height;
            this.size = Math.random() * 3 + 1;
            this.speedX = Math.random() * 0.7 - 0.35;
            this.speedY = Math.random() * 0.7 - 0.35;
            this.opacity = Math.random() * 0.7 + 0.2;
        }
        update() {
            this.x += this.speedX;
            this.y += this.speedY;
            if (this.x > particleCanvas.width) this.x = 0;
            if (this.x < 0) this.x = particleCanvas.width;
            if (this.y > particleCanvas.height) this.y = 0;
            if (this.y < 0) this.y = particleCanvas.height;
        }
        draw() {
            particleCtx.fillStyle = `rgba(255, 255, 255, ${this.opacity})`;
            particleCtx.beginPath();
            particleCtx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
            particleCtx.fill();
        }
    }

    function initParticles() {
        for (let i = 0; i < numberOfParticles; i++) {
            particlesArray.push(new Particle());
        }
    }

    function animateParticles() {
        particleCtx.clearRect(0, 0, particleCanvas.width, particleCanvas.height);
        for (let i = 0; i < particlesArray.length; i++) {
            particlesArray[i].update();
            particlesArray[i].draw();
        }
        requestAnimationFrame(animateParticles);
    }

    initParticles();
    animateParticles();

    // Efecto geométrico sutil
    const geometricCanvas = document.getElementById("geometricCanvas");
    const geometricCtx = geometricCanvas.getContext("2d");

    geometricCanvas.width = window.innerWidth;
    geometricCanvas.height = window.innerHeight;

    function drawGeometricPattern() {
        geometricCtx.clearRect(0, 0, geometricCanvas.width, geometricCanvas.height);
        geometricCtx.strokeStyle = `rgba(255, 255, 255, 0.05)`;
        geometricCtx.lineWidth = 0.5;

        for (let i = 0; i < 10; i++) {
            geometricCtx.beginPath();
            geometricCtx.moveTo(Math.random() * geometricCanvas.width, 0);
            geometricCtx.lineTo(Math.random() * geometricCanvas.width, geometricCanvas.height);
            geometricCtx.stroke();
        }
        requestAnimationFrame(drawGeometricPattern);
    }

    drawGeometricPattern();

    // Animaciones de entrada escalonadas
    document.addEventListener("DOMContentLoaded", function () {
        const sections = document.querySelectorAll(".glass-panel");

        sections.forEach((section, index) => {
            setTimeout(() => {
                section.style.transition = "opacity 1.5s ease-out, transform 1.5s ease-out";
                section.style.opacity = "1";
                section.style.transform = "translateY(0)";
            }, 300 + index * 200);
        });
    });
        function filtrarAlumnos() {
        var input = document.getElementById("buscadorAlumnos");
        var filtro = input.value.toLowerCase();
        var filas = document.querySelectorAll(".table-row");

        filas.forEach(function(fila) {
            var nombre = fila.querySelector('[data-label="Nombre"]').textContent.toLowerCase();
            var apPa = fila.querySelector('[data-label="Apellido Paterno"]').textContent.toLowerCase();
            var apMa = fila.querySelector('[data-label="Apellido Materno"]').textContent.toLowerCase();
            if (nombre.includes(filtro) || apPa.includes(filtro) || apMa.includes(filtro)) {
                fila.style.display = "";
            } else {
                fila.style.display = "none";
            }
        });
    }

</script>
